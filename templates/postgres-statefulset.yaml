{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "canine.fullname" . }}-postgres
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "canine.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres
spec:
  serviceName: {{ include "canine.fullname" . }}-postgres
  replicas: 1
  selector:
    matchLabels:
      {{- include "canine.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgres
  template:
    metadata:
      labels:
        {{- include "canine.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.password | quote }}
            - name: POSTGRES_MULTIPLE_DATABASES
              value: {{ .Values.postgresql.auth.databases | quote }}
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          {{- if .Values.postgresql.resources }}
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
          {{- end }}
  {{- if .Values.postgresql.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        storageClassName: {{ .Values.postgresql.persistence.storageClass }}
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.postgresql.persistence.size }}
  {{- end }}
{{- end }}
